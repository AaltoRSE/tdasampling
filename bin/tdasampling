#!/usr/bin/env python3
import numpy as np
from tdasampling import sampling
from optparse import OptionParser
np.set_printoptions(threshold=np.inf)

if __name__ == "__main__":

	usage = ("Usage: %prog [options] bounds density number_of_functions_in_system "
	 "polynomial_system_directory\n Bounds should be of the form x_1,y_1,...,x_n,y_n for"
	 " the bounding box [x_1,y_1] x ... x [x_n,y_n]")

	parser = OptionParser(usage)
	parser.add_option("--instances",type="int",dest="number_of_parallel_instances",default=1,help="Number of parallel instances of the sampling algorithm to run simultaneously.")
	parser.add_option("--homparallel",type="int",dest="number_of_processors_for_bertini",default=1,help="Number of processors to use for homotopy continuation for each instance of the algorithm.")
	parser.add_option("-p","--parameters",action="store_true",dest="parameter_file",default=False,help="Set this flag if you want to use parameters file. The only required argument when this flag is present is polynomial_system_directory.")
	parser.add_option("--mpiexecutable",dest="mpi_executable_location",help="Use this option to specify a path to mpiexec if it is not in your PATH by defualt.")
	parser.add_option("--bertini",dest="bertini_executable_location",help="Use this option to specify a path to bertini if it is not in your PATH by defualt.")
	parser.add_option("--totalprocessors",dest="total_number_of_processors",type=int,help="Specify the total number of processing threads to be used on the executing machine.")
	parser.add_option("--errorlimit",dest="rounding_precision",type=float,default=1e-7,help="Specify the maximum distance of points returned by homotopy continuation from the variety.")
	parser.add_option("--output",dest="output_file_name",help="Specify non-standard output file name.")
	parser.add_option("--dimensionality",dest="dimensionality",type="int",help="Number of variables in polynomial system. Setting this option will check to make sure you have provided the right number of bounds.")
	parser.add_option("--previous",dest="previous_points",help="Path to a previous point sample to use as smaller search space. This option must be accompanied by --prevdensity.")
	parser.add_option("--prevdensity",dest="old_density",type=float,help="Density of previous sample for use with --previous.")
	parser.add_option("--hosts",dest="hosts",help="Comma separated list of ssh host names to use for MPI functionality of Bertini.")
	parser.add_option("--skipint",dest="skip_interval",type=float,help="Step size for increasing permissiveness of point addition heuristics. Defaults recommended.")
	parser.add_option("--avglength",dest="rolling_average_length",type=int,help="Number of points to remember for point addition heuristics. Defaults recommended.")
	parser.add_option("--allowedskips",dest="number_of_allowed_skips",type=int,help="Number of remembered points which are allowed to be skips before increasing permissiveness. Defaults recommended.")
	parser.add_option("--outpath",dest="output_path",help="File name of output file if you do not want to use the default. Can be in any directory.")
	parser.add_option("--varindices",dest="variable_indices",help="Comma separated list of indices of minimizer variables in minimizer file.")


	(parameters,args) = parser.parse_args()
	parameters = parameters.__dict__

	sampling(parameters, args)

